 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.ownership.test;

         
import edu.mac.malwarereport.ownership.data.OwnershipAssignmentFacade;
import edu.mac.malwarereport.personnel.entity.OwnershipAssignment;
import edu.mac.malwarereport.personnel.manager.OwnershipAssignmentManager;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.Singleton;
import jakarta.ejb.Startup;
import jakarta.inject.Inject;


/**
 *
 * @author tohyu
 */
@Startup
@Singleton
public class InitializeData {
    
    @Inject
    private OwnershipAssignmentFacade ownershipAssignmentFacade;

    @PostConstruct
    public void init(){
        
        if(ownershipAssignmentFacade.count() <= 0){
            
            
            //Temasek organiastion ACCOUNT_ORGANISATION
            OwnershipAssignment ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(1); //temasek poly
            ownershipAssignment.setSecondaryId(1); //Eddy
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(1); //temasek poly
            ownershipAssignment.setSecondaryId(4); //jasmine
            ownershipAssignmentFacade.create(ownershipAssignment);

            ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(1); //temasek poly
            ownershipAssignment.setSecondaryId(7); //first
            ownershipAssignmentFacade.create(ownershipAssignment);

            ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(1); //temasek poly
            ownershipAssignment.setSecondaryId(10); //yunzhen
            ownershipAssignmentFacade.create(ownershipAssignment);

            
            //Leo malware analysis operation ACCOUNT_ORGANISATION
            ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(2); //leo operation
            ownershipAssignment.setSecondaryId(13); //leo
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(2); //leo operation
            ownershipAssignment.setSecondaryId(16); //leobuddy
            ownershipAssignmentFacade.create(ownershipAssignment);

            ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(2); //leo operation
            ownershipAssignment.setSecondaryId(19); //leofriend
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            
            //Testing ACCOUNT_ORGANISATION
            ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(3); //testing
            ownershipAssignment.setSecondaryId(22); //malware lab core group
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "acc");
            ownershipAssignment.setPrimaryId(3); //testing
            ownershipAssignment.setSecondaryId(25); //token
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            
            
            
            //Temasek organisation REPORT_ORGNAISATION
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(1); //Temasek
            ownershipAssignment.setSecondaryId(101); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(1); //Temasek
            ownershipAssignment.setSecondaryId(104); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(1); //Temasek
            ownershipAssignment.setSecondaryId(107); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(1); //Temasek
            ownershipAssignment.setSecondaryId(110); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(1); //Temasek
            ownershipAssignment.setSecondaryId(113); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            
            //MAC organisation REPORT_ORGNAISATION
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(2); //MAC
            ownershipAssignment.setSecondaryId(116); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(2); //MAC
            ownershipAssignment.setSecondaryId(119); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(2); //MAC
            ownershipAssignment.setSecondaryId(122); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "report");
            ownershipAssignment.setPrimaryId(2); //MAC
            ownershipAssignment.setSecondaryId(125); //malware
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            
            //TEMASEK ROLE
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(1); //TP
            ownershipAssignment.setSecondaryId(4); //Principal
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(1); //TP
            ownershipAssignment.setSecondaryId(5); //Director
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(1); //TP
            ownershipAssignment.setSecondaryId(6); //Chairman
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(1); //TP
            ownershipAssignment.setSecondaryId(7); //Lecturer
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(1); //TP
            ownershipAssignment.setSecondaryId(8); //Student
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(1); //TP
            ownershipAssignment.setSecondaryId(9); //Guest
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            
            //LEO MALWARE OPERATION ROLE
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(2); //LMAO
            ownershipAssignment.setSecondaryId(10); //Supervisor
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(2); //LMAO
            ownershipAssignment.setSecondaryId(11); //Security Manager
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(2); //LMAO
            ownershipAssignment.setSecondaryId(12); //Tier-1 Analyst
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(2); //LMAO
            ownershipAssignment.setSecondaryId(13); //Tier-2 Analyst
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(2); //LMAO
            ownershipAssignment.setSecondaryId(14); //Support
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            
            //TESTING ROLE
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(3); //TESTING
            ownershipAssignment.setSecondaryId(15); //Security Manager
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(3); //TESTING
            ownershipAssignment.setSecondaryId(16); //Tier-1 Malware Analyst
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(3); //TESTING
            ownershipAssignment.setSecondaryId(17); //Tier-2 Malware Analyst
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            ownershipAssignment = new OwnershipAssignment("org", "role");
            ownershipAssignment.setPrimaryId(3); //TESTING
            ownershipAssignment.setSecondaryId(18); //Frontdesk
            ownershipAssignmentFacade.create(ownershipAssignment);
            
            
        }
        
    }
}

