/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.subjectassignment.data;

import edu.mac.malwarereport.subjectassignment.entity.SubjectAssignment;
import jakarta.ejb.Stateless;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import java.util.List;

/**
 *
 * @author tohyu
 */
@Stateless
public class SubjectAssignmentFacade extends AbstractFacade<SubjectAssignment> {
    
    @PersistenceContext(unitName = "subjectassignmentPU")
    private EntityManager em;
    
    @Override
    protected EntityManager getEntityManager(){
        return em;
    }
    
    public SubjectAssignmentFacade(){
        super(SubjectAssignment.class);
    }
    
    public SubjectAssignment getSubjectAssignment(SubjectAssignment subjectAssignment){
        long primaryId = subjectAssignment.getPrimaryId();
        long secondaryId = subjectAssignment.getSecondaryId();
        return getEntityManager().createNamedQuery("SubjectAssignment.byAll", SubjectAssignment.class)
                .setParameter("primaryId", primaryId)
                .setParameter("secondaryId", secondaryId)
                .getSingleResult();
    }

    
    public boolean mappingExist(SubjectAssignment subjectAssignment){
        long primaryId = subjectAssignment.getPrimaryId();
        long secondaryId = subjectAssignment.getSecondaryId();
        
        return !getEntityManager().createNamedQuery("SubjectAssignment.byAll", SubjectAssignment.class)
                .setParameter("primaryId", primaryId)
                .setParameter("secondaryId", secondaryId)
                .getResultList().isEmpty();
    }
    
    //Check if account already has role
    public boolean mappingExistByPrimaryId(SubjectAssignment subjectAssignment){
        long primaryId = subjectAssignment.getPrimaryId();
        return !getEntityManager().createNamedQuery("SubjectAssignment.byPrimaryId", SubjectAssignment.class)
                .setParameter("primaryId", primaryId)
                .getResultList().isEmpty();
    }
    
    //Check if role is used
    public boolean mappingExistBySecondaryId(SubjectAssignment subjectAssignment){
        long secondaryId = subjectAssignment.getSecondaryId();
        return !getEntityManager().createNamedQuery("SubjectAssignment.bySecondaryId", SubjectAssignment.class)
                .setParameter("secondaryId", secondaryId)
                .getResultList().isEmpty();
    }
    
    //Using account find role
    public List<SubjectAssignment> getAllMappingByPrimaryId(SubjectAssignment subjectAssignment){
        long primaryId = subjectAssignment.getPrimaryId();
        return getEntityManager().createNamedQuery("SubjectAssignment.byPrimaryId", SubjectAssignment.class)
                .setParameter("primaryId", primaryId)
                .getResultList();
    }
    
    //Using role find all account
    public List<SubjectAssignment> getAllMappingBySecondaryId(SubjectAssignment subjectAssignment){
        long secondaryId = subjectAssignment.getSecondaryId();
        return getEntityManager().createNamedQuery("SubjectAssignment.bySecondaryId", SubjectAssignment.class)
                .setParameter("secondaryId", secondaryId)
                .getResultList();
    }
    
    public int countAllMappingBySecondaryId(SubjectAssignment SubjectAssignment){
        long secondaryId = SubjectAssignment.getSecondaryId();
        return getEntityManager().createNamedQuery("SubjectAssignment.bySecondaryId", SubjectAssignment.class)
                .setParameter("secondaryId", secondaryId)
                .getResultList().size();
    }
    
    public int countAllMappingByPrimaryId(SubjectAssignment SubjectAssignment){
        long primaryId = SubjectAssignment.getPrimaryId();
        return getEntityManager().createNamedQuery("SubjectAssignment.byPrimaryId", SubjectAssignment.class)
                .setParameter("primaryId", primaryId)
                .getResultList().size();
    }
    
}
