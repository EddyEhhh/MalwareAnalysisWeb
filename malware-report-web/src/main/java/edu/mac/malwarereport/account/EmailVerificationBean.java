/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.account;

import edu.mac.malwarereport.account.applicationFacade.AuthenticateApplicationFacade;
import edu.mac.malwarereport.account.dto.EmailVerificationDTO;
import static edu.mac.malwarereport.account.outputInfo.EmailVerificationStatus.TOKEN_EXPIRE;
import static edu.mac.malwarereport.account.outputInfo.OutcomeStatus.FAILURE;
import static edu.mac.malwarereport.account.outputInfo.OutcomeStatus.SUCCESS;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.ExternalContext;
import jakarta.faces.context.FacesContext;
import jakarta.faces.context.Flash;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.io.IOException;

/**
 *
 * @author Jaibun Thana
 */

@RequestScoped
@Named("emailVerificationBean")
public class EmailVerificationBean {
    
    @Inject
    private AuthenticateApplicationFacade authenticateApplicationFacade;
    
    @Inject
    private FacesContext facesContext;
    
    private EmailVerificationDTO emailVerificationDTO = new EmailVerificationDTO();

    public String verifyEmail() throws IOException{
        facesContext = FacesContext.getCurrentInstance();
        Flash flash = facesContext.getExternalContext().getFlash();
        flash.setKeepMessages(true);
        switch (authenticateApplicationFacade.emailVerification(emailVerificationDTO)){
            case SUCCESS:
                facesContext.addMessage("login:growl", new FacesMessage(FacesMessage.SEVERITY_INFO, "Email has been verified", null));
                return "login.xhtml?faces-redirect=true"; 
            case FAILURE:
                facesContext.addMessage("login:growl", new FacesMessage(FacesMessage.SEVERITY_ERROR, "Oops something went wrong!", null));
                return "login.xhtml?faces-redirect=true"; 
            case TOKEN_EXPIRE:
                facesContext.addMessage("login:growl", new FacesMessage(FacesMessage.SEVERITY_ERROR, "Link has expired", "Please check your email"));
                return "login.xhtml?faces-redirect=true"; 
            default:
                facesContext.addMessage("login:growl", new FacesMessage(FacesMessage.SEVERITY_ERROR, "Oops something went wrong!", null));
                return "login.xhtml?faces-redirect=true"; 
        }
    
    }
    
    private ExternalContext getExternalContext(){
        return facesContext.getExternalContext();
    }
    
    /**
     * @return the emailVerificationDTO
     */
    public EmailVerificationDTO getEmailVerificationDTO() {
        return emailVerificationDTO;
    }

    /**
     * @param emailVerificationDTO the emailVerificationDTO to set
     */
    public void setEmailVerificationDTO(EmailVerificationDTO emailVerificationDTO) {
        this.emailVerificationDTO = emailVerificationDTO;
    }
    
    
}
