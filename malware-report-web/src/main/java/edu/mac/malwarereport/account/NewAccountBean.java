/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.account;

import edu.mac.malwarereport.account.applicationFacade.AccountApplicationFacade;
import edu.mac.malwarereport.account.dto.AccountDTO;
import static edu.mac.malwarereport.account.outputInfo.OutcomeStatus.FAILURE;
import static edu.mac.malwarereport.account.outputInfo.OutcomeStatus.SUCCESS;
import static edu.mac.malwarereport.account.outputInfo.ResetPasswordStatus.TIMEOUT;
import edu.mac.malwarereport.account.web.RedirectBean;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.faces.context.Flash;
import jakarta.inject.Inject;
import jakarta.inject.Named;

/**
 *
 * @author Jaibun Thana
 */

@RequestScoped
@Named("newAccountBean")
public class NewAccountBean {
    
    //Object
    private AccountDTO accountDTO = new AccountDTO();
    
    @Inject
    private AccountApplicationFacade accountApplicationFacade;
    
    @Inject
    private RedirectBean redirectBean;
    
    @Inject
    private FacesContext facesContext;
        
    public void newAccountPassword() throws Exception{
        if (accountDTO.confirmPassword()) {
            facesContext = FacesContext.getCurrentInstance();
            Flash flash = facesContext.getExternalContext().getFlash();
            flash.setKeepMessages(true);
            switch (accountApplicationFacade.activateNewAccount(accountDTO)) {
                case SUCCESS:
                    facesContext.addMessage("login:growl", new FacesMessage(FacesMessage.SEVERITY_INFO, "Account verified", null));
                    redirectBean.login();
                    break;
                case FAILURE:
                    facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Oops something went wrong!", null));
                    break;
                case TIMEOUT:
                    facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Link expired, please check email.", null));
                    break;
                default:
                    facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Oops something went wrong!(2)", null));
                    break;
            }
        }else{
            facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Password do not match", null));

        }
    }

    
    //SETTERS GETTERS
    public AccountDTO getAccountDTO() {
        return accountDTO;
    }

    public void setAccountDTO(AccountDTO accountDTO) {
        this.accountDTO = accountDTO;
    }

}