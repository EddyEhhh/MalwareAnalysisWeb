/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.account;

import edu.mac.malwarereport.account.applicationFacade.ReadAccountApplicationFacade;
import edu.mac.malwarereport.account.applicationFacade.SubjectRoleApplicationFacade;
import edu.mac.malwarereport.account.dto.AccountDTO;
import jakarta.annotation.PostConstruct;
import jakarta.enterprise.context.RequestScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.Collections;
import java.util.List;
import java.util.Locale;
import org.apache.commons.lang3.StringUtils;

/**
 *
 * @author E
 */
@Named("viewAllManagerBean")
@RequestScoped
//view all the members part of the organisation
public class ViewAllManagerBean implements Serializable{

    private List<AccountDTO> accounts;
    
    private List<AccountDTO> filteredAccount;
    
    @Inject
    private ReadAccountApplicationFacade readAccountApplicationFacade;
    
    @Inject
    private SubjectRoleApplicationFacade subjectRoleApplicationFacade;
    
    @PostConstruct
    public void init(){
        accounts = subjectRoleApplicationFacade.getAllManager();
        Collections.reverse(accounts);
    }
    
    public boolean globalFilterFunction(Object value, Object filter, Locale locale) {
        String filterText = (filter == null) ? null : filter.toString().trim().toLowerCase();
        if (StringUtils.isBlank(filterText)) {
            return true;
        }

        AccountDTO account = (AccountDTO) value;
        return account.getFirstName().toLowerCase().contains(filterText)
                || account.getLastName().toLowerCase().contains(filterText)
                || account.getEmail().toLowerCase().contains(filterText);
    }
    
     /**
     * @return the accounts
     */
    public List<AccountDTO> getAccounts() {
        return accounts;
    }

    /**
     * @param accounts the accounts to set
     */
    public void setAccounts(List<AccountDTO> accounts) {
        this.accounts = accounts;
    }
    
    
    /**
     * @return the filteredAccounts
     */
    public List<AccountDTO> getFilteredAccount() {
        return filteredAccount;
    }

    /**
     * @param filteredAccount the filteredAccount to set
     */
    public void setFilteredAccount(List<AccountDTO> filteredAccount) {
        this.filteredAccount = filteredAccount;
    }
    
    
}
