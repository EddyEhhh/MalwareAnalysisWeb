/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.mac.malwarereport.account.admin;

import edu.mac.malwarereport.account.applicationFacade.AccountOrganisationApplicationFacade;
import edu.mac.malwarereport.account.dto.AccountDTO;
import static edu.mac.malwarereport.account.outputInfo.OutcomeStatus.FAILURE;
import static edu.mac.malwarereport.account.outputInfo.OutcomeStatus.SUCCESS;
import static edu.mac.malwarereport.account.outputInfo.RegisterStatus.EMAIL_EXIST;
import edu.mac.malwarereport.account.web.RedirectBean;
import edu.mac.malwarereport.organisation.dto.OrganisationDTO;
import edu.mac.malwarereport.role.dto.RoleDTO;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import jakarta.servlet.http.HttpServletRequest;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.primefaces.PrimeFaces;

/**
 *
 * @author Jaibun Thana
 */
@Named("organisationRegisterBean")
@RequestScoped
public class OrganisationRegisterBean implements Serializable {

    private static final long serialVersionUID = 1L;
    
    @Inject
    private AccountOrganisationApplicationFacade accountOrganisationApplicationFacade;
    
    @Inject
    private FacesContext facesContext;
    
    private PrimeFaces primeFaces = PrimeFaces.current();

    private AccountDTO accountDTO = new AccountDTO();
    
    
    public void registerToOrganisation() throws Exception{
        HttpServletRequest req = (HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest();
        //this is to request the 'id' which is the variable at the end on the url 
        String id = (req.getParameter("id"));
        System.out.print("id");
        OrganisationDTO organisationDTO = new OrganisationDTO();
        organisationDTO.setSuuid(id);
        System.out.print(id);
        switch (accountOrganisationApplicationFacade.registerManager(accountDTO, organisationDTO)){
            case EMAIL_EXIST:
                    facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "User already exist", null));
                    //primeFaces.ajax().update("createMemberPanel");
                    break;
            case FAILURE:
                    facesContext.addMessage("createMemberMessage", new FacesMessage(FacesMessage.SEVERITY_ERROR, "An error has occured while creating user", null));
                    //primeFaces.ajax().update("createMemberPanel");
                    break;
            case SUCCESS:
                    facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "User registered", null));
                    accountDTO = new AccountDTO();
                    primeFaces.ajax().update("memberForm");
                    primeFaces.executeScript("PF('addMemberDialog').hide();");
                    primeFaces.ajax().update("createMemberForm");
                    break;
            default:
                    facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Oops something went wrong!", null));
                    primeFaces.ajax().update("createMemberPanel");
                    break;
        }
    }

    //getters and setters
    public AccountDTO getAccountDTO() {
        return accountDTO;
    }

    public void setAccountDTO(AccountDTO accountDTO) {
        this.accountDTO = accountDTO;
    }


}

