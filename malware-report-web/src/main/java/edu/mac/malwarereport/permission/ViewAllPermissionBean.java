/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.permission;

import edu.mac.malwarereport.permission.applicationFacade.PermissionApplicationFacade;
import edu.mac.malwarereport.permission.dto.PermissionDTO;
import jakarta.annotation.PostConstruct;
import jakarta.enterprise.context.RequestScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.Collections;
import java.util.List;
import java.util.Locale;
import org.apache.commons.lang3.StringUtils;

/**
 *
 * @author tohyu
 */
@Named("viewAllPermission")
@RequestScoped
public class ViewAllPermissionBean implements Serializable{
    
    private List<PermissionDTO> permission;
    
    private List<PermissionDTO> filteredPermission;
    
    private PermissionDTO selectedPermssion;
    
    @Inject
    private PermissionApplicationFacade permissionApplicationFacade;
    
    @PostConstruct
    public void init(){
        permission = permissionApplicationFacade.findAll();
        Collections.reverse(permission);
    }
    
    public boolean globalFilterFunction(Object value, Object filter, Locale locale) {
        String filterText = (filter == null) ? null : filter.toString().trim().toLowerCase();
        if (StringUtils.isBlank(filterText)) {
            return true;
        }
        
        PermissionDTO permission = (PermissionDTO) value;
        return permission.getName().toLowerCase().contains(filterText) ||
               permission.getDescription().toLowerCase().contains(filterText)||
               permission.getLabel().toLowerCase().contains(filterText);
    }
    
    /**
     * @return the permission
     */
    public List<PermissionDTO> getPermission() {
        return permission;
    }

    /**
     * @param permission the permission to set
     */
    public void setPermission(List<PermissionDTO> permission) {
        this.permission = permission;
    }

    /**
     * @return the filteredPermission
     */
    public List<PermissionDTO> getFilteredPermission() {
        return filteredPermission;
    }

    /**
     * @param filteredPermission the filteredPermission to set
     */
    public void setFilteredPermission(List<PermissionDTO> filteredPermission) {
        this.filteredPermission = filteredPermission;
    }

    /**
     * @return the selectedPermssion
     */
    public PermissionDTO getSelectedPermssion() {
        return selectedPermssion;
    }

    /**
     * @param selectedPermssion the selectedPermssion to set
     */
    public void setSelectedPermssion(PermissionDTO selectedPermssion) {
        this.selectedPermssion = selectedPermssion;
    }
    
}
