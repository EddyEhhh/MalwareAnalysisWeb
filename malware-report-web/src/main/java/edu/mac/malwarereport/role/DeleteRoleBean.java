/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.role;

import static edu.mac.malwarereport.account.outputInfo.OutcomeStatus.ERROR;
import static edu.mac.malwarereport.account.outputInfo.OutcomeStatus.SUCCESS;
import edu.mac.malwarereport.role.applicationFacade.RoleOrganisationApplicationFacade;
import edu.mac.malwarereport.role.dto.RoleDTO;
import static edu.mac.malwarereport.role.outputInfo.DeleteRoleMappingStatus.INVALID_INHERIT;
import static edu.mac.malwarereport.role.outputInfo.DeleteRoleMappingStatus.INVALID_INHERITED;
import static edu.mac.malwarereport.role.outputInfo.DeleteRoleMappingStatus.INVALID_ROLE_ASSIGNED;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.List;
import org.primefaces.PrimeFaces;

/**
 *
 * @author Jaibun Thana
 */
@Named("deleteRoleBean")
@ViewScoped
public class DeleteRoleBean implements Serializable{
    
    @Inject
    private RoleOrganisationApplicationFacade roleOrganisationApplicationFacade;
    
    @Inject
    private FacesContext facesContext;
    
    private PrimeFaces primeFaces = PrimeFaces.current();

    
    private RoleDTO selectedRoleDTO;
    
    public void openDeleteDialog(RoleDTO roleDTO){
        selectedRoleDTO = roleDTO;
        primeFaces.executeScript("PF('deleteRoleDialog').show();");
        //FacesContext.getCurrentInstance().getPartialViewContext().getRenderIds().add("deleteRoleForm:deleteRoleDialog");
    }
    
    public void delete() throws Exception{
        //NOTE ADD PREVENT DELETION IF PARENT/CHILD EXIST
        switch(roleOrganisationApplicationFacade.deleteRoleOrganisation(selectedRoleDTO)){
            case SUCCESS:
                facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Role sucessfully deleted", null));
                primeFaces.ajax().update("roleForm"); 
                break;
            case INVALID_ROLE_ASSIGNED:
                facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Role used by user", null));
                break;
            case ERROR:
                facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Oops something went wrong!", null));
                break;
            case INVALID_INHERIT:
                facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Role currently inherits: " + getRoleListName(selectedRoleDTO.getChildren()), null));
                break;
            case INVALID_INHERITED:
                facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Role currently inherited by: " + getRoleListName(selectedRoleDTO.getParent()), null));
                break;
            default:
                facesContext.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Oops something went wrong!", null));
                break;
        }
    }
    
    private String getRoleListName(List<RoleDTO> roleDTOList){
        String roleList = "";
        for(int i = 0 ; i < roleDTOList.size();i++){
            roleList += roleDTOList.get(i).getName();
            if(i < roleDTOList.size()-1){
                roleList += ", ";
            }
        }
        return roleList;
    }
    
    
    /**
     * @return the selectedRoleDTO
     */
    public RoleDTO getSelectedRoleDTO() {
        return selectedRoleDTO;
    }

    /**
     * @param selectedRoleDTO the selectedRoleDTO to set
     */
    public void setSelectedRoleDTO(RoleDTO selectedRoleDTO) {
        this.selectedRoleDTO = selectedRoleDTO;
    }
    
    
    
    
}
