/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.role.converter;

import jakarta.faces.component.UIComponent;
import jakarta.faces.context.FacesContext;
import jakarta.faces.convert.Converter;
import jakarta.faces.convert.FacesConverter;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.UUID;

/**
 *
 * @author Jaibun Thana
 */

@FacesConverter(value ="roleConverter")
public class RoleDTOConverter implements Converter{

//    @Override
//    public Object getAsObject(FacesContext context, UIComponent component, String value) {
//        if (value.isEmpty()){
//            return null;
//        }
//        return this.getViewMap(context).get(value);
//    }
//
//    @Override
//    public String getAsString(FacesContext context, UIComponent component, Object object) {
//            if(object == null){
//                return "";
//            }
//            
//            RoleDTO roleDTO = (RoleDTO) object;
//            String name = roleDTO.getName();
//            if(name != ""){
//                this.getViewMap(context).put(name, object);
//                return name;
//            } else {
//                return "0";
//            }
//    }
    
    private static Map<Object, String> entities = new HashMap<Object, String>();
        
    @Override
    public Object getAsObject(FacesContext ctx, UIComponent component, String value) {
        for (Entry<Object, String> entry : entities.entrySet()) {
            if (entry.getValue().equals(value)) {
                System.out.println("getKey:" + entry.getKey());
                return entry.getKey();
            }
        }return value;
    }

    @Override
    public String getAsString(FacesContext facesContext, UIComponent uiComponent, Object object) {
        if (!entities.containsKey(object)) {
            String uuid = UUID.randomUUID().toString();
            entities.put(object, uuid);
            return uuid;
        } else {
            return entities.get(object);
        }
    }
   
    
}
