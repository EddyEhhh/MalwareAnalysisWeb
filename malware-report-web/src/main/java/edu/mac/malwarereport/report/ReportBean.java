/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.report;

import edu.mac.malwarereport.report.applicationFacade.SampleApplicationFacade;
import edu.mac.malwarereport.report.dto.SampleDTO;
import jakarta.annotation.PostConstruct;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import jakarta.servlet.http.HttpServletRequest;

/**
 *
 * @author tohyu
 */
@Named("reportBean")
@RequestScoped
//this cl to show the details of each individual report
public class ReportBean {
    
    //variable selectedReport from ReportValueDTO
    private SampleDTO selectedSample;
    
    private String threatLevelSeverity;
    
    private String color;
    

    
    @Inject
    private SampleApplicationFacade sampleApplicationFacade;
    

    
    //initialise
    @PostConstruct
    public void init(){
        HttpServletRequest req = (HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest();
        //this is to request the 'id' which is the variable at the end on the url 
        String uuid = req.getParameter("id");
        SampleDTO sampleDTO = new SampleDTO();
        sampleDTO.setSuuid(uuid);
        //find the report by the 'id'
        selectedSample = sampleApplicationFacade.findByUuid(sampleDTO);
        
//        String sampleName = selectedSample.getReportValueDTO().getSampleName();
//        String suuid = selectedSample.getSuuid();
//        
//        filepath = ("/component/Sandcastle Report - " + sampleName + " (" + suuid + ").pdf"); 
//        System.out.print(filepath);
        
        //this is to help us colour code the threat level severity
        //find the threat level of that specific report
        int threatScore = selectedSample.getReportValueDTO().getThreatScore();
        checkThreatLevel(threatScore);
    }
    
    //this to help us to colour code the severity
    private void checkThreatLevel(int threatScore){
        //compare the threatlevel using lowercase (to make life easier)
        switch(threatScore){
            //if the threat level is malicious, the severity is danger (red)
        case(1):
            selectedSample.getReportValueDTO().setDesignation("Safe");
            threatLevelSeverity = "success";
            color = "#419544";
            break;
            
            //if the threat level is suspicious, the severity is warning (yellow)
        case(2):
            selectedSample.getReportValueDTO().setDesignation("Suspicious");
            threatLevelSeverity = "warning";
            color = "#fbc02d";
            break;
        //if the threat level is benign, the severity is success (green)
        case(3):
        case(4):
        case(5):
            selectedSample.getReportValueDTO().setDesignation("Malicious");
            threatLevelSeverity = "danger";
            color = "#e91e63";
            break;
        //if the threat level is unknown, the severity is primary (blue)
        default:
        case(0):
            selectedSample.getReportValueDTO().setDesignation("Unknown");
            threatLevelSeverity = "primary";
            color = "#1c80cf";
            break;
        
        }
    }
    

    
    //getters and setters

    /**
     * @return the selectedReport
     */
    public SampleDTO getSelectedSample() {
        return selectedSample;
    }

    /**
     * @param selectedReport the selectedReport to set
     */
    public void setSelectedSample(SampleDTO selectedSample) {
        this.selectedSample = selectedSample;
    }

    /**
     * @return the threatLevelSeverity
     */
    public String getThreatLevelSeverity() {
        return threatLevelSeverity;
    }

    /**
     * @param threatLevelSeverity the threatLevelSeverity to set
     */
    public void setThreatLevelServerity(String threatLevelSeverity) {
        this.threatLevelSeverity = threatLevelSeverity;
    }
    
        /**
     * @return the color
     */
    public String getColor() {
        return color;
    }

    /**
     * @param color the color to set
     */
    public void setColor(String color) {
        this.color = color;
    }
    
 
    
}
