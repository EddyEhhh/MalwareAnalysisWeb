/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.permission.test;

import edu.mac.malwarereport.permission.data.PermissionFacade;
import edu.mac.malwarereport.permission.entity.Category;
import edu.mac.malwarereport.permission.entity.Permission;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.Singleton;
import jakarta.ejb.Startup;
import jakarta.inject.Inject;

/**
 *
 * @author tohyu
 */
@Startup
@Singleton
public class InitializeData {

    @Inject
    private PermissionFacade permissionFacade;

    @PostConstruct
    public void init() {
        
        if(permissionFacade.count()<=0){
            
        Category category = new Category("ANALYSIS");
            
        //REPORT
        String name = "View Report";
        String label = "testing";
        String scope = "INTERNAL";
        int level = 1;
        String description = "Allow view report permission";
        Permission permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);

        name = "Download report";
        label = "testing";
        description = "Download report";
        scope = "INTERNAL";
        level = 1;
        permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);
        
        name = "Upload Malware";
        label = "testing";
        description = "Upload malware";
        scope = "INTERNAL";
        level = 1;
        permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);

        
        category = new Category("DASHBOARD");
        //DASHBOARD
        name = "View Dashboard";
        label = "testing";
        description = "this is for testing purposes";
        scope = "ALL";
        level = 1;
        permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);
        
        category = new Category("ACCOUNT");
        //ACCOUNT
        name = "View Member";
        label = "testing";
        description = "this is for testing purposes";
        scope = "INTERNAL";
        level = 1;
        permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);
        
        name = "Edit Member Detail";
        label = "testing";
        description = "this is for testing purposes";
        scope = "INTERNAL";
        level = 1;
        permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);
        
        category = new Category("SELF");
        name = "View Profile";
        label = "testing";
        description = "this is for testing purposes";
        scope = "SELF";
        level = 1;
        permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);
        
        name = "Edit Profile";
        label = "testing";
        description = "this is for testing purposes";
        scope = "SELF";
        level = 1;
        permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);
        
        
        category = new Category("ADMIN");
        name = "View All Account";
        label = "testing";
        description = "this is for testing purposes";
        scope = "ALL";
        level = 1;
        permission = new Permission(name, label, category, scope, level, description);
        permissionFacade.create(permission);
        }
    }
}
