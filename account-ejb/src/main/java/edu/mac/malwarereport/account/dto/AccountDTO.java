/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.mac.malwarereport.account.dto;

import edu.mac.malwarereport.account.entity.Account;
import edu.mac.malwarereport.account.validation.PasswordRegex;
import jakarta.security.enterprise.credential.Credential;
import jakarta.security.enterprise.credential.Password;
import jakarta.security.enterprise.credential.UsernamePasswordCredential;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import java.awt.image.BufferedImage;
import java.util.UUID;

/**
 *
 * @author Jaibun Thana
 */

public class AccountDTO {
    
    private String suuid;
    
    @Email(message = "Invalid Email")
    @NotBlank(message = "Field cannot be empty")
    private String email;
    
    @NotBlank(message = "Field cannot be empty")
    @Pattern(regexp = "^[A-Za-z]+[A-Za-z ,.'-/]*$", message = "Invalid name")
    @Size(min = 1, max = 64)
    private String firstName;
    
    @NotBlank(message = "Field cannot be empty")
    @Pattern(regexp = "^[A-Za-z]+[A-Za-z ,.'-/]*$", message = "Invalid name")
    @Size(min = 1, max = 32)
    private String lastName;
        
    //Only accepts specific file type. Add avoid steg.
    //@Pattern(regexp = "^[\\w\\-. ]+(\\.png)$", message = "Invalid file name")
    private String profilePicture;
    
    @PasswordRegex
    @NotBlank(message = "Field cannot be empty")
    private String password;
    
    @PasswordRegex(message = "Invalid password")
    @NotBlank(message = "Field cannot be empty")
    private String currentPassword;
    
    @NotBlank(message = "Field cannot be empty")
    private String confirmPassword;
    
    private boolean delete;
    
    private String passwordToken;
    
    private BufferedImage auth2FAQR;
        
    private int failedLoginAttempts;
    
    private boolean emailVerified;
    
    private int loginAttempt;
    
    private String organisationSuuid;
    
    private String flag;
    
    
    
    public AccountDTO(){}
    
    public AccountDTO(String suuid, String email, String firstName, String lastName, String profilePicture, boolean delete){
        this.email = email;
        this.firstName = firstName;
        this.lastName = lastName;
        this.profilePicture = profilePicture;
        this.delete = delete;
        this.suuid = suuid;
    }
    
    public AccountDTO(String suuid, String email, String firstName, String lastName, String profilePicture, boolean delete, int loginAttempt, boolean emailVerified){
        this.email = email;
        this.firstName = firstName;
        this.lastName = lastName;
        this.profilePicture = profilePicture;
        this.delete = delete;
        this.suuid = suuid;
        this.loginAttempt = loginAttempt;
        this.emailVerified = emailVerified;
    }

    public AccountDTO(String email, String firstName, String lastName, String password) {
        this.email = email;
        this.firstName = firstName;
        this.lastName = lastName;
        this.password = password;
    }
    
    
    
//    public AccountDTO(String email, String firstName, String lastName, String profilePicture,){
//        this.email = email;
//        this.firstName = firstName;
//        this.lastName = lastName;
//        this.profilePicture = profilePicture;
//        this.delete = delete;
//    }
    
    public Account toAccount(){
        //String hashPassword = passwordHasher.generate(this.password.toCharArray());
        Account account = new Account(this.email, this.firstName, this.lastName, this.password, this.profilePicture);
        return account;
    }
    
    
    public Credential toCredential(){
        Credential credential = new UsernamePasswordCredential(this.email, new Password(this.password));
        return credential;
    }
    
    public String getInitial(){
        String firstNameInitial = Character.toString(this.firstName.charAt(0));
        String lastNameInitial = Character.toString(this.lastName.substring(this.lastName.lastIndexOf(" ")+1).charAt(0));
        return firstNameInitial + lastNameInitial;
    }
    
    public boolean confirmPassword(){
        if(this.password.equals(this.confirmPassword)){
            return true;
        }else{
            return false;
        }
    }

    /**
     * @return the email
     */
    public String getEmail() {
        return email;
    }

    /**
     * @param email the email to set
     */
    public void setEmail(String email) {
        this.email = email.toLowerCase();
    }

    /**
     * @return the firstName
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * @param firstName the firstName to set
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * @return the lastName
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * @param lastName the lastName to set
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }


    /**
     * @return the password
     */
    public String getPassword() {
        return password;
    }

    /**
     * @param password the password to set
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * @return the profilePicture
     */
    public String getProfilePicture() {
        return profilePicture;
    }

    /**
     * @param profilePicture the profilePicture to set
     */
    public void setProfilePicture(String profilePicture) {
        this.profilePicture = profilePicture;
    }

    /**
     * @return the delete
     */
    public boolean isDelete() {
        return delete;
    }

    /**
     * @param delete the delete to set
     */
    public void setDelete(boolean delete) {
        this.delete = delete;
    }

    /**
     * @return the auth2FAQR
     */
    public BufferedImage getAuth2FAQR() {
        return auth2FAQR;
    }

    /**
     * @param auth2FAQR the auth2FAQR to set
     */
    public void setAuth2FAQR(BufferedImage auth2FAQR) {
        this.auth2FAQR = auth2FAQR;
    }

    /**
     * @return the confirmPassword
     */
    public String getConfirmPassword() {
        return confirmPassword;
    }

    /**
     * @param confirmPassword the confirmPassword to set
     */
    public void setConfirmPassword(String confirmPassword) {
        this.confirmPassword = confirmPassword;
    }

    /**
     * @return the currentPassword
     */
    public String getCurrentPassword() {
        return currentPassword;
    }

    /**
     * @param currentPassword the currentPassword to set
     */
    public void setCurrentPassword(String currentPassword) {
        this.currentPassword = currentPassword;
    }

    /**
     * @return the passwordToken
     */
    public String getPasswordToken() {
        return passwordToken;
    }

    /**
     * @param passwordToken the passwordToken to set
     */
    public void setPasswordToken(String passwordToken) {
        this.passwordToken = passwordToken;
    }
    
        /**
     * @return the suuid
     */
    public String getSuuid() {
        return suuid;
    }

    /**
     * @param suuid the suuid to set
     */
    public void setSuuid(String suuid) {
        this.suuid = suuid;
    }
    
        /**
     * @return the failedLoginAttempts
     */
    public int getFailedLoginAttempts() {
        return failedLoginAttempts;
    }

    /**
     * @param failedLoginAttempts the failedLoginAttempts to set
     */
    public void setFailedLoginAttempts(int failedLoginAttempts) {
        this.failedLoginAttempts = failedLoginAttempts;
    }

    /**
     * @return the organisationId
     */
    public String getOrganisationSuuid() {
        return organisationSuuid;
    }

    /**
     * @param organisationId the organisationId to set
     */
    public void setOrganisationSuuid(String organisationSuuid) {
        this.organisationSuuid = organisationSuuid;
    }

    /**
     * @return the flag
     */
    public String getFlag() {
        return flag;
    }

    /**
     * @param flag the flag to set
     */
    public void setFlag(String flag) {
        this.flag = flag;
    }

    /**
     * @return the emailVerified
     */
    public boolean isEmailVerified() {
        return emailVerified;
    }

    /**
     * @param emailVerified the emailVerified to set
     */
    public void setEmailVerified(boolean emailVerified) {
        this.emailVerified = emailVerified;
    }

    /**
     * @return the loginAttempt
     */
    public int getLoginAttempt() {
        return loginAttempt;
    }

    /**
     * @param loginAttempt the loginAttempt to set
     */
    public void setLoginAttempt(int loginAttempt) {
        this.loginAttempt = loginAttempt;
    }
  }
