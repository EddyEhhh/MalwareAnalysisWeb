/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.account.subjectassignment.mapper;

import edu.mac.malwarereport.subjectassignment.outputinfo.MappingStatus;
import edu.mac.malwarereport.personnel.entity.OwnershipAssignment;
import edu.mac.malwarereport.role.data.RoleFacade;
import edu.mac.malwarereport.subjectassignment.entity.SubjectAssignment;
import edu.mac.malwarereport.subjectassignment.manager.SubjectAssignmentManager;
import jakarta.ejb.Stateless;
import jakarta.inject.Inject;
import java.util.List;

/**
 *
 * @author Jaibun Thana
 */
@Stateless
public class SubjectRoleMapper {
    
    @Inject
    private SubjectAssignmentManager subjectAssignmentManager;
    
    @Inject
    private RoleFacade roleFacade;
    
//    public long getOrganisationId(String organisationSuuid){
//        return organisationManager.getIdBySuuid(organisationSuuid);
//    }
    
    public MappingStatus createMapping(Long accountId, Long roleId){
        SubjectAssignment subjectAssignment = new SubjectAssignment();
        try{
            subjectAssignment.setPrimaryId(accountId);
            subjectAssignment.setSecondaryId(roleId);
            return (subjectAssignmentManager.create(subjectAssignment));
        }catch (Exception e){
            return MappingStatus.FAILURE;
        }
    }
    
    public boolean deleteMapping(Long accountId, Long roleId){
        SubjectAssignment subjectAssignment = new SubjectAssignment();
        try{
            subjectAssignment.setPrimaryId(accountId);
            subjectAssignment.setSecondaryId(roleId);
            return subjectAssignmentManager.delete(subjectAssignment);
        }catch (Exception e){
            return false;
        }
    }
    
    
    //GET ALL ACCOUNT USING A ROLE
    public List<Long> getAllAccountIdbyRole(Long roleId){
        SubjectAssignment subjectAssignment = new SubjectAssignment();
        subjectAssignment.setSecondaryId(roleId);
        return subjectAssignmentManager.getAllPrimaryId(subjectAssignment);
    }
    
    //GET ALL ROLE ASSIGNED TO ACCOUNT
    public List<Long> getAllRoleIdbyAccount(Long accountId){
        SubjectAssignment subjectAssignment = new SubjectAssignment();
        subjectAssignment.setPrimaryId(accountId);
        return subjectAssignmentManager.getAllSecondaryId(subjectAssignment);
    }
    
    //REMOVE ALL ACCOUNT'S ROLE
    public boolean deleteAllMappingByAccountId(Long accountId){
        SubjectAssignment subjectAssignment = new SubjectAssignment();
        subjectAssignment.setPrimaryId(accountId);
        return subjectAssignmentManager.deleteAllByPrimary(subjectAssignment);
    }
    
    public int countAccountWithRole(long roleId){
        SubjectAssignment subjectAssignment = new SubjectAssignment();
        subjectAssignment.setSecondaryId(roleId);
        return subjectAssignmentManager.countAllMappingBySecondaryId(subjectAssignment);
    }
    
    public int countRoleWithAccount(long accountId){
        SubjectAssignment subjectAssignment = new SubjectAssignment();
        subjectAssignment.setPrimaryId(accountId);
        return subjectAssignmentManager.countAllMappingByPrimaryId(subjectAssignment);
    }
    
    public boolean isRoleMapped(long roleId){
        SubjectAssignment subjectAssignment = new SubjectAssignment();
        subjectAssignment.setSecondaryId(roleId);
        return subjectAssignmentManager.isSecondaryMapped(subjectAssignment);
    }
    
    
    
    
}
