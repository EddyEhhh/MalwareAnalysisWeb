/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.account.authenticate;

import edu.mac.malwarereport.account.data.AccountFacade;
import edu.mac.malwarereport.account.entity.Account;
import jakarta.ejb.Stateless;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import jakarta.security.enterprise.SecurityContext;
import jakarta.security.enterprise.identitystore.Pbkdf2PasswordHash;

/**
 *
 * @author Jaibun Thana
 */

@Stateless
@Named("authenticate")
public class Authenticate {
    
    @Inject
    private SecurityContext securityContext;
    
    @Inject
    private AccountFacade facade;
    
    @Inject
    private Pbkdf2PasswordHash passwordHasher;

    public String getCurrentUser(){
        return securityContext.getCallerPrincipal().getName();
    }
    
    public Account getCurrentAccount(){
        String user = securityContext.getCallerPrincipal().getName();
        return facade.getAccount(user);
    }
    
    public boolean isAuthenticated(){
        return (securityContext.getCallerPrincipal() != null);
    }
    
    public boolean isCredentialValid(String email, String password){
        try{
        String accountPassword = facade.getAccount(email).getPassword();
        return passwordHasher.verify(password.toCharArray(), accountPassword);
        }catch(Exception e){
            return false;
        }

    }
    
    public boolean isFirstLogin(String email){
        return facade.getAccount(email).isFirstLogin();
    }
    
    public void firstLogin(String email){
        if(isFirstLogin(email)){
            Account account = facade.getAccount(email);
            account.setFirstLogin(false);
            facade.edit(account);
        }
    }
    
    
    public String passwordHasher(String password){
        return passwordHasher.generate(password.toCharArray());
    }
    
}
