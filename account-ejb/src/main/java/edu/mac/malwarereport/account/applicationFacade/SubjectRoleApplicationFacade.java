/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.account.applicationFacade;

import edu.mac.malwarereport.accesscontrol.interceptor.IsAdministratorInterceptor;
import edu.mac.malwarereport.accesscontrol.interceptor.IsPermittedInterceptor;
import edu.mac.malwarereport.account.subjectassignment.manager.*;
import edu.mac.malwarereport.account.dto.AccountDTO;
import edu.mac.malwarereport.subjectassignment.outputinfo.MappingStatus;
import edu.mac.malwarereport.role.dto.RoleDTO;
import jakarta.ejb.Stateless;
import jakarta.inject.Inject;
import jakarta.interceptor.Interceptors;
import java.util.List;

/**
 *
 * @author Jaibun Thana
 */
@Stateless

public class SubjectRoleApplicationFacade {

    @Inject
    private SubjectRoleManager subjectRoleManager;

    //Permission: no (only avail if user can read role)
    public List<RoleDTO> getAllIndirectInheritance(RoleDTO roleDTO) {
        return subjectRoleManager.getAllIndirectInheritance(roleDTO);
    }

    //Permission: no
    public List<RoleDTO> getAllRoleByAccount(AccountDTO accountDTO) {
        return subjectRoleManager.getAllRoleByAccount(accountDTO);
    }

    //Permission: no
    public List<AccountDTO> getAllAccountByRole(RoleDTO roleDTO) {
        return subjectRoleManager.getAllAccountByRole(roleDTO);
    }
    
    //Permission: Manager only (Edit user's role)
    @Interceptors({IsPermittedInterceptor.class})
    public MappingStatus createMultiMapping(AccountDTO accountDTO, List<RoleDTO> roleDTOList) {
        return subjectRoleManager.createMultiMapping(accountDTO, roleDTOList);
    }
    
    //Permission: no (Permission check related)
    public boolean isAdministrator(){
        return subjectRoleManager.isAdministrator();
    }
    
    public boolean isManager(){
        return subjectRoleManager.isManager();
    }
    
    @Interceptors({IsAdministratorInterceptor.class})
    public List<AccountDTO> getAllManager(){
        return subjectRoleManager.getAllManager();
    }

}
