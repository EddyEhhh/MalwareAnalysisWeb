/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.account.entity;

import edu.mac.malwarereport.account.resource.SecureTokenGenerator;
import jakarta.inject.Inject;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToOne;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotBlank;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author Jaibun Thana
 */

@Entity
@Table(name="emailVerification")
@NamedQueries({
    @NamedQuery(name = "EmailVerification.byToken", query = "select a from EmailVerification a where a.token = :token")
})
public class EmailVerification {
    
    @Id
    @Column(name="id")
    @GeneratedValue(strategy=GenerationType.AUTO)
    private long id;
    
    @Column(name="isVerified")
    private boolean verified;
    
    @Column(name="token", unique = true)
    private String token;
    
    @Column(name="timestamp")
    private Date timestamp;
    
    @OneToOne(mappedBy = "emailVerification", fetch = FetchType.EAGER)
    @JoinColumn(referencedColumnName = "id", name="accountId")
    private Account account;
    
    @PrePersist
    public void onCreate(){
        Calendar cal = Calendar.getInstance();
        Date date = cal.getTime();
        timestamp = date;
        verified = false;
    }
    
    @PreUpdate
    public void onUpdate(){
        Calendar cal = Calendar.getInstance();
        Date date = cal.getTime();
        timestamp = date;
    }
    
    public EmailVerification(){}
    
    public EmailVerification(String token) {
        this.token = token;
    }

    /**
     * @return the id
     */
    public long getId() {
        return id;
    }

    /**
     * @param id the id to set
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * @return the token
     */
    public String getToken() {
        return token;
    }

    /**
     * @param token the token to set
     */
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * @return the timestamp
     */
    public Date getTimestamp() {
        return timestamp;
    }

    /**
     * @param timestamp the timestamp to set
     */
    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * @return the account
     */
    public Account getAccount() {
        return account;
    }

    /**
     * @param account the account to set
     */
    public void setAccount(Account account) {
        this.account = account;
    }

    /**
     * @return the verified
     */
    public boolean isVerified() {
        return verified;
    }

    /**
     * @param verified the verified to set
     */
    public void setVerified(boolean verified) {
        this.verified = verified;
    }
    
}
