/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.role.dto;

import edu.mac.malwarereport.role.entity.Role;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import java.util.ArrayList;
import java.util.List;
/**
 *
 * @author tohyu
 */
public class RoleDTO {    
    
    @NotBlank
    @Pattern(regexp = "^[A-Za-z0-9 /\\-_,.']+$", message = "Invalid name. Valid characters: Letters, Symbols: / - _ , . ' ")
    private String name;
    
    @Pattern(regexp = "^[A-Za-z0-9 /\\-_,.']+$", message = "Invalid description. Valid characters: Letters, Symbols: / - _ , . ' ")
    private String description;
    
    private List<RoleDTO> parent;
    
    private List<RoleDTO> children;
        
    private String suuid;
    
    public RoleDTO(){};
    
    public RoleDTO(String name, String description, String suuid){
        this.name = name;
        this.description = description;
        this.suuid = suuid;
        this.children = new ArrayList<>();
        this.parent = new ArrayList<>();
    }
    
//    public Role toObject(){
//        Role role = new Role(this.name, this.description, this.suuid);
//        return role;
//    }
    
    public Role toObject(){
        Role role = new Role(this.name, this.description);
        return role;
    }
    
    List<RoleDTO> inheritance = new ArrayList<>();
    public List<RoleDTO> getInheritance(RoleDTO roleDTO) {
        for (RoleDTO child : roleDTO.getChildren()) {
            inheritance.add(child);
            getInheritance(child);
        } 
        return inheritance;
    }

    
//    private void getAllInheritance(RoleDTO roleDTO) {
//        for (RoleDTO child : roleDTO.getChildren()) {
//            inheritance.add(child);
//            getAllInheritance(child);
//        } 
//    }
    
    List<RoleDTO> inheritedBy = new ArrayList<>();
    public List<RoleDTO> getAllInheritedBy(RoleDTO roleDTO) {
        for (RoleDTO parent : roleDTO.getParent()) {
            inheritedBy.add(parent);
            getAllInheritedBy(parent);
        }
        return inheritedBy;
    }

//    List<RoleDTO> inheritedBy = new ArrayList<>();
//    private void getAllInheritance(RoleDTO roleDTO) {
//        for (RoleDTO parent : roleDTO.getParent()) {
//            inheritedBy.add(parent);
//            getAllInheritance(parent);
//        }
//    }


    /**
     * @return the roleName
     */
    public String getName() {
        return name;
    }

    /**
     * @param roleName the roleName to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return the description
     */
    public String getDescription() {
        return description;
    }

    /**
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    
        /**
     * @return the suuid
     */
    public String getSuuid() {
        return suuid;
    }

    /**
     * @param suuid the suuid to set
     */
    public void setSuuid(String suuid) {
        this.suuid = suuid;
    }

    /**
     * @return the parent
     */
    public List<RoleDTO> getParent() {
        return parent;
    }

    /**
     * @param parent the parent to set
     */
    public void setParent(List<RoleDTO> parent) {
        this.parent = parent;
    }

    /**
     * @return the children
     */
    public List<RoleDTO> getChildren() {
        return children;
    }

    /**
     * @param children the children to set
     */
    public void setChildren(List<RoleDTO> children) {
        this.children = children;
    }

    
    
    
}
