/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package edu.mac.malwarereport.role.test;

import edu.mac.malwarereport.role.data.RoleFacade;
import edu.mac.malwarereport.role.entity.Role;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.Singleton;
import jakarta.ejb.Startup;
import jakarta.inject.Inject;
import java.util.ArrayList;
import java.util.List;


/**
 *
 * @author tohyu
 */
@Startup
@Singleton
public class InitializeData {
    
    @Inject
    private RoleFacade roleFacade;
    
    @PostConstruct 
    public void init(){
        
        if(roleFacade.count()<=0){
            
            String name = "Administrator";
            String description = "Sandcastle's Administrator.";
            Role role = new Role(name, description);
            roleFacade.create(role);

            name = "Manager";
            description = "Organisation manager";
            role = new Role(name,description);
            roleFacade.create(role);

            name = "Students";
            description = "this is for students";
            role = new Role(name,description);
            roleFacade.create(role);

            //Temasek Polytechnic
            
            name = "Guest";
            description = "Visitor of TP";
            Role guest = new Role(name,description);
            roleFacade.create(guest);
            
            name = "Student";
            description = "Full-time personnel studying in TP";
            Role student = new Role(name,description);
            List<Role> roleList = new ArrayList<>();
            roleList.add(guest);
            student.setChildren(roleList);
            roleFacade.create(student);
            
            name = "Lecturer";
            description = "Facilitate lessons";
            Role lecturer = new Role(name,description);
            roleList = new ArrayList<>();
            roleList.add(student);
            lecturer.setChildren(roleList);
            roleFacade.create(lecturer);
            
            name = "Chairman";
            description = "Oversees course";
            Role chairman = new Role(name,description);
            roleList = new ArrayList<>();
            roleList.add(lecturer);
            chairman.setChildren(roleList);
            roleFacade.create(chairman);

            name = "Director";
            description = "Oversees School department";
            Role director = new Role(name,description);
            roleFacade.create(director);
            
            name = "Principal";
            description = "Administrate staff";
            Role principal = new Role(name,description);
            roleList = new ArrayList<>();
            roleList.add(chairman);
            roleList.add(director);
            principal.setChildren(roleList);
            roleFacade.create(principal);
            


            //LMAO

            name = "Tier-1 Analyst";
            description = "Review cases to assess their threat, escalate if required.";
            Role tier1 = new Role(name,description);
            roleFacade.create(tier1);

            name = "Tier-2 Analyst";
            description = "Analyse threat and secure against threat";
            Role tier2 = new Role(name,description);
            roleList = new ArrayList<>();
            roleList.add(tier1);
            tier2.setChildren(roleList);
            roleFacade.create(tier2);

            name = "Support";
            description = "Assist customers to create case";
            Role support = new Role(name,description);
            roleFacade.create(support);
            
            name = "Security Manager";
            description = "Oversees centre's operation";
            Role securityM = new Role(name,description);
            roleList = new ArrayList<>();
            roleList.add(tier2);
            roleList.add(support);
            securityM.setChildren(roleList);
            roleFacade.create(securityM);
            
            name = "Supervisor";
            description = "Supervise staff";
            Role supervisor = new Role(name,description);
            roleList = new ArrayList<>();
            roleList.add(securityM);
            supervisor.setChildren(roleList);
            roleFacade.create(supervisor);


            //Testing
            name = "Security Manager";
            description = "Oversee the operation";
            role = new Role(name,description);
            roleFacade.create(role);

            name = "Tier-1 Malware Analyst";
            description = "Identify threats";
            role = new Role(name,description);
            roleFacade.create(role);

            name = "Tier-2 Malware Analyst";
            description = "Understand Malware's nature and secure";
            role = new Role(name,description);
            roleFacade.create(role);

            name = "Frontdesk";
            description = "Communicate with clients";
            role = new Role(name,description);
            roleFacade.create(role);
        
        
        }
        
    }
    
    
    
   
    
}
